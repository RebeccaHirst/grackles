<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="1.85.2">
  <Settings>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="Experiment info" updates="None" val="{u'session': u'001', u'participant': u''}" valType="code"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Units" updates="None" val="cm" valType="str"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Window size (pixels)" updates="None" val="[1440, 900]" valType="code"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="OSF Project ID" updates="None" val="" valType="str"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="expName" updates="None" val="newnewnew" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
  </Settings>
  <Routines>
    <Routine name="BeginningFood">
      <PolygonComponent name="Session_Start_Key">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="Session_Start_Key" valType="code"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="stopVal" updates="constant" val="15" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="[0, 0]" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="3" valType="int"/>
        <Param name="size" updates="constant" val="[.2, .2]" valType="code"/>
      </PolygonComponent>
      <CodeComponent name="code4food_3">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code4food_3" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="feeder_open = False&amp;#10;win.mouseVisible = False" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="if Session_Start_Key.status == STARTED and t &gt;= frameRemains:&amp;#10;    continueRoutine = False&amp;#10;&amp;#10;#if FeederOpening_3.status == STARTED:&amp;#10;#    if not feeder_open:&amp;#10;#        feeder_open = True&amp;#10;#        feeder_start = t # current time&amp;#10;#        servo.setAccel(0,-2)      #set servo 0 acceleration to -2&amp;#10;#        servo.setTarget(0,4600)  #move servo to feed &amp;#10;#        servo.setAccel(10,-2)      #set servo 0 acceleration to -4&amp;#10;#        servo.setTarget(10,6000)&amp;#10;#if FeederClosing_3.status == STARTED:&amp;#10;#    servo.setAccel(0,-2)      #set servo 0 acceleration to -2&amp;#10;#    servo.setTarget(0,6000)  #move servo to resting position&amp;#10;#    servo.setAccel(10,-2)      #set servo 0 acceleration to -4&amp;#10;#    servo.setTarget(10,4500)&amp;#10;#    servo.close &amp;#10;#    feeder_open = False" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="FeederOpening_3">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="FeederOpening_3" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="blue" valType="str"/>
        <Param name="text" updates="constant" val="Feeder Is Open and Light is On&amp;#10;" valType="str"/>
        <Param name="stopVal" updates="constant" val="12" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
      </TextComponent>
      <TextComponent name="FeederClosing_3">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="FeederClosing_3" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="blue" valType="str"/>
        <Param name="text" updates="constant" val="Feeder Closing" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="12" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.3" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="experiment_over">
      <TextComponent name="FirstRoutine_2">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="FirstRoutine_2" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="The experiment is over. Please place bird back in cage and press the escape button to close the program. X out of the error messages and tally the day on the wall." valType="str"/>
        <Param name="stopVal" updates="constant" val="2500" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="1" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="ITI">
      <PolygonComponent name="ITI_TargetStimulus">
        <Param name="opacity" updates="set every repeat" val="0" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="ITI_TargetStimulus" valType="code"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="stopVal" updates="constant" val="1" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, .75)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="99897" valType="int"/>
        <Param name="size" updates="constant" val="(0.2, 0.2)" valType="code"/>
      </PolygonComponent>
    </Routine>
    <Routine name="blankscreen_space_goes_2_food">
      <CodeComponent name="code_2">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="if Feeder_Closing.status == STARTED:&amp;#10;    servo.setAccel(0,-2)      #set servo 0 acceleration to -2&amp;#10;    servo.setTarget(0,6000)  #move servo to resting position&amp;#10;    servo.setAccel(10,-2)      #set servo 0 acceleration to -4&amp;#10;    servo.setTarget(10,4500)&amp;#10;    servo.close " valType="extendedCode"/>
      </CodeComponent>
      <PolygonComponent name="timer">
        <Param name="opacity" updates="constant" val="0" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="timer" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="60" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(0.5, 0.5)" valType="code"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="stopVal" updates="constant" val="1200" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="Feeder_Closing">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="Feeder_Closing" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="Feeder Is Closed&amp;#10;" valType="str"/>
        <Param name="stopVal" updates="constant" val="1200" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Blackscreen">
      <TextComponent name="nothing">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="nothing" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="" valType="str"/>
        <Param name="stopVal" updates="constant" val="$ITI_TIME" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="ExperimentOver"/>
    <Routine name="AutoshapeFoodReward">
      <CodeComponent name="skipfoodreward">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="skipfoodreward" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="if skipfoodreward:&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <CodeComponent name="code4food_2">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code4food_2" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="feeder_open = False" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="if FeederOpening_2.status == STARTED:&amp;#10;    if not feeder_open:&amp;#10;        feeder_open = True&amp;#10;        feeder_start = t # current time&amp;#10;        servo.setAccel(0,-2)      #set servo 0 acceleration to -2&amp;#10;        servo.setTarget(0,4600)  #move servo to feed &amp;#10;        servo.setAccel(10,-2)      #set servo 0 acceleration to -4&amp;#10;        servo.setTarget(10,6000)&amp;#10;&amp;#10;if FeederClosing_2.status == STARTED:&amp;#10;    servo.setAccel(0,-2)      #set servo 0 acceleration to -2&amp;#10;    servo.setTarget(0,6000)  #move servo to resting position&amp;#10;    servo.setAccel(10,-2)      #set servo 0 acceleration to -4&amp;#10;    servo.setTarget(10,4500)&amp;#10;    servo.close &amp;#10;    feeder_open = False" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="FeederOpening_2">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="FeederOpening_2" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="Feeder Opening" valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.0" valType="code"/>
      </TextComponent>
      <TextComponent name="FeederClosing_2">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="FeederClosing_2" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="Feeder Closing" valType="str"/>
        <Param name="stopVal" updates="constant" val="1" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="3" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.0" valType="code"/>
      </TextComponent>
      <PolygonComponent name="DummyTS_2">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="DummyTS_2" valType="code"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="stopVal" updates="constant" val="4" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -.75)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="99897" valType="int"/>
        <Param name="size" updates="constant" val="(0.2, 0.2)" valType="code"/>
      </PolygonComponent>
    </Routine>
    <Routine name="Place_Bird_In_Box">
      <TextComponent name="FirstRoutine">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="FirstRoutine" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="Place the bird in the box and close and lock the door.&amp;#10;&amp;#10;Once the bird is settled, press space button to start the experiment. " valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="1" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="PressSpace">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="PressSpace" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="FoodReward">
      <CodeComponent name="code4food">
        <Param name="Begin Experiment" updates="constant" val="win.mouseVisible = False" valType="extendedCode"/>
        <Param name="name" updates="None" val="code4food" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="feeder_open = False" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="if FeederOpening.status == STARTED:&amp;#10;    if not feeder_open:&amp;#10;        feeder_open = True&amp;#10;        feeder_start = t # current time&amp;#10;        servo.setAccel(0,-2)      #set servo 0 acceleration to -2&amp;#10;        servo.setTarget(0, 1500)  #move servo to feed &amp;#10;        servo.setAccel(10,-2)      #set servo 0 acceleration to -4&amp;#10;        servo.setTarget(10,6000)&amp;#10;" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="FeederOpening">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="FeederOpening" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="Feeder Opening" valType="str"/>
        <Param name="stopVal" updates="constant" val="1200" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.1)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="stopVal" updates="constant" val="1200" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Beginning_Screen">
      <CodeComponent name="importmaestro">
        <Param name="Begin Experiment" updates="constant" val="import maestro&amp;#10;servo = maestro.Controller('COM6')&amp;#10;servo.setAccel(0,-2)      #set servo 0 acceleration to -4&amp;#10;servo.setTarget(0,6000)&amp;#10;servo.setAccel(10,-2)      #set servo 0 acceleration to -4&amp;#10;servo.setTarget(10,4500)&amp;#10;" valType="extendedCode"/>
        <Param name="name" updates="None" val="importmaestro" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="..." valType="str"/>
        <Param name="stopVal" updates="constant" val="3" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="DS">
      <CodeComponent name="Code4TextResponse">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="Code4TextResponse" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="#feeder_open = False&amp;#10;#skipfoodreward = False&amp;#10;" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="#if Code4Response == 'Yes':&amp;#10;#    skipfoodreward = False&amp;#10;#    # open feeder if not already open:&amp;#10;#    if mouseA.isPressedIn(TargetStimulusA):&amp;#10;#        if not feeder_open:&amp;#10;#            feeder_open = True&amp;#10;#            feeder_start = t # current time&amp;#10;#            FeederOpen.tStart = t # in replace of servo command&amp;#10;#            FeederOpen.frameNStart = frameN  # in replace of servo command&amp;#10;#            FeederOpen.setAutoDraw(True) # in replace of servo command&amp;#10;#        else:&amp;#10;#            feeder_start = t &amp;#10;#    if feeder_open and t - feeder_start &gt; 1.5:&amp;#10;#        FeederClose.tStart = t # in replace of servo command&amp;#10;#        FeederClose.frameNStart = frameN # in replace of servo command&amp;#10;#        FeederClose.setAutoDraw(True) # in replace of servo command&amp;#10;#        feeder_open = False&amp;#10;#if Code4Response == 'No':&amp;#10;#    skipfoodreward = True" valType="extendedCode"/>
      </CodeComponent>
      <CodeComponent name="Code4Response">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="Code4Response" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="feeder_open = False&amp;#10;skipfoodreward = False&amp;#10;win.mouseVisible = False" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="if Code4Response == 'Yes':&amp;#10;    skipfoodreward = False&amp;#10;#open feeder if not already open:&amp;#10;    if mouseA.isPressedIn(TargetStimulusA):&amp;#10;        if not feeder_open:&amp;#10;            feeder_open = True&amp;#10;            feeder_start = t # current time&amp;#10;            servo.setAccel(0,-2)      #set servo 0 acceleration to 4&amp;#10;            servo.setTarget(0,4500)  #move servo to feed&amp;#10;            servo.setAccel(10,-2)      #set servo 0 acceleration to -4&amp;#10;            servo.setTarget(10,6000)&amp;#10;        else:&amp;#10;            feeder_start = t &amp;#10;    if feeder_open and t - feeder_start &gt; 3:&amp;#10;            servo.setAccel(0,-2)      #set servo 0 acceleration to 4&amp;#10;            servo.setTarget(0,6000)  #move servo to feed&amp;#10;            servo.setAccel(10,-2)      #set servo 0 acceleration to -4&amp;#10;            servo.setTarget(10,4500)&amp;#10;            feeder_open = False&amp;#10;if Code4Response == 'No':&amp;#10;    skipfoodreward = True" valType="extendedCode"/>
      </CodeComponent>
      <CodeComponent name="Code4Data">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="Code4Data" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="if mouseA.isPressedIn(background_2) and not (mouseA.isPressedIn(TargetStimulusA)):&amp;#10;    thisExp.addData('mouseArTime',t)&amp;#10;    thisExp.addData('mouseArposition', mouseA.getPos())&amp;#10;    thisExp.addData('InstimulusAr', 0)&amp;#10;    thisExp.nextEntry()&amp;#10;    while mouseA.isPressedIn(background_2) and not (mouseA.isPressedIn(TargetStimulusA)):&amp;#10;        continue&amp;#10;&amp;#10;elif (mouseA.isPressedIn(TargetStimulusA)):&amp;#10;    thisExp.addData('mouseArTime', t)&amp;#10;    thisExp.addData('mouseArposition', mouseA.getPos())&amp;#10;    thisExp.addData('InstimulusAr', 1)&amp;#10;    thisExp.nextEntry()&amp;#10;    while (mouseA.isPressedIn(TargetStimulusA)):&amp;#10;        continue&amp;#10;&amp;#10;" valType="extendedCode"/>
      </CodeComponent>
      <PolygonComponent name="CueA">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="CueA" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$Cuecolor" valType="str"/>
        <Param name="stopVal" updates="constant" val="20" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0.2)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(1.5, 1.5)" valType="code"/>
      </PolygonComponent>
      <PolygonComponent name="TargetStimulusA">
        <Param name="opacity" updates="set every repeat" val="$TargetStimulusOpacity" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="TargetStimulusA" valType="code"/>
        <Param name="fillColor" updates="constant" val="white" valType="str"/>
        <Param name="stopVal" updates="constant" val="20" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -.75)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="99897" valType="int"/>
        <Param name="size" updates="constant" val="(0.2, 0.2)" valType="code"/>
      </PolygonComponent>
      <MouseComponent name="mouseA">
        <Param name="name" updates="None" val="mouseA" valType="code"/>
        <Param name="timeRelativeTo" updates="constant" val="experiment" valType="str"/>
        <Param name="stopVal" updates="constant" val="20" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutineOnPress" updates="constant" val="False" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="saveMouseState" updates="None" val="never" valType="str"/>
      </MouseComponent>
      <PolygonComponent name="background_2">
        <Param name="opacity" updates="constant" val="0" valType="code"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="background_2" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="20" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="size" updates="constant" val="(3.5, 3.5)" valType="code"/>
      </PolygonComponent>
      <TextComponent name="FeederOpen">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="FeederOpen" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="Feeder Opening" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="condition" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
      <TextComponent name="FeederClose">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="FeederClose" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="Feeder Close" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.5" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -.1)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="condition" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Code_For_Servo">
      <CodeComponent name="code">
        <Param name="Begin Experiment" updates="constant" val="import serial&amp;#10;from sys import version_info&amp;#10;&amp;#10;PY2 = version_info[0] == 2   #Running Python 2.x?&amp;#10;&amp;#10;#&amp;#10;#---------------------------&amp;#10;# Maestro Servo Controller&amp;#10;#---------------------------&amp;#10;#&amp;#10;# Support for the Pololu Maestro line of servo controllers&amp;#10;#&amp;#10;# Steven Jacobs -- Aug 2013&amp;#10;# https://github.com/FRC4564/Maestro/&amp;#10;#&amp;#10;# These functions provide access to many of the Maestro's capabilities using the&amp;#10;# Pololu serial protocol&amp;#10;#&amp;#10;class Controller:&amp;#10;    # When connected via USB, the Maestro creates two virtual serial ports&amp;#10;    # /dev/ttyACM0 for commands and /dev/ttyACM1 for communications.&amp;#10;    # Be sure the Maestro is configured for &quot;USB Dual Port&quot; serial mode.&amp;#10;    # &quot;USB Chained Mode&quot; may work as well, but hasn't been tested.&amp;#10;    #&amp;#10;    # Pololu protocol allows for multiple Maestros to be connected to a single&amp;#10;    # serial port. Each connected device is then indexed by number.&amp;#10;    # This device number defaults to 0x0C (or 12 in decimal), which this module&amp;#10;    # assumes.  If two or more controllers are connected to different serial&amp;#10;    # ports, or you are using a Windows OS, you can provide the tty port.  For&amp;#10;    # example, '/dev/ttyACM2' or for Windows, something like 'COM3'.&amp;#10;    def __init__(self,ttyStr='/dev/ttyACM0',device=0x0c):&amp;#10;        # Open the command port&amp;#10;        self.usb = serial.Serial(ttyStr)&amp;#10;        # Command lead-in and device number are sent for each Pololu serial command.&amp;#10;        self.PololuCmd = chr(0xaa) + chr(device)&amp;#10;        # Track target position for each servo. The function isMoving() will&amp;#10;        # use the Target vs Current servo position to determine if movement is&amp;#10;        # occuring.  Upto 24 servos on a Maestro, (0-23). Targets start at 0.&amp;#10;        self.Targets = [0] * 24&amp;#10;        # Servo minimum and maximum targets can be restricted to protect components.&amp;#10;        self.Mins = [0] * 24&amp;#10;        self.Maxs = [0] * 24&amp;#10;        &amp;#10;    # Cleanup by closing USB serial port&amp;#10;    def close(self):&amp;#10;        self.usb.close()&amp;#10;&amp;#10;    # Send a Pololu command out the serial port&amp;#10;    def sendCmd(self, cmd):&amp;#10;        cmdStr = self.PololuCmd + cmd&amp;#10;        if PY2:&amp;#10;            self.usb.write(cmdStr)&amp;#10;        else:&amp;#10;            self.usb.write(bytes(cmdStr,'latin-1'))&amp;#10;&amp;#10;    # Set channels min and max value range.  Use this as a safety to protect&amp;#10;    # from accidentally moving outside known safe parameters. A setting of 0&amp;#10;    # allows unrestricted movement.&amp;#10;    #&amp;#10;    # ***Note that the Maestro itself is configured to limit the range of servo travel&amp;#10;    # which has precedence over these values.  Use the Maestro Control Center to configure&amp;#10;    # ranges that are saved to the controller.  Use setRange for software controllable ranges.&amp;#10;    def setRange(self, chan, min, max):&amp;#10;        self.Mins[chan] = min&amp;#10;        self.Maxs[chan] = max&amp;#10;&amp;#10;    # Return Minimum channel range value&amp;#10;    def getMin(self, chan):&amp;#10;        return self.Mins[chan]&amp;#10;&amp;#10;    # Return Maximum channel range value&amp;#10;    def getMax(self, chan):&amp;#10;        return self.Maxs[chan]&amp;#10;        &amp;#10;    # Set channel to a specified target value.  Servo will begin moving based&amp;#10;    # on Speed and Acceleration parameters previously set.&amp;#10;    # Target values will be constrained within Min and Max range, if set.&amp;#10;    # For servos, target represents the pulse width in of quarter-microseconds&amp;#10;    # Servo center is at 1500 microseconds, or 6000 quarter-microseconds&amp;#10;    # Typcially valid servo range is 3000 to 9000 quarter-microseconds&amp;#10;    # If channel is configured for digital output, values &lt; 6000 = Low ouput&amp;#10;    def setTarget(self, chan, target):&amp;#10;        # if Min is defined and Target is below, force to Min&amp;#10;        if self.Mins[chan] &gt; 0 and target &lt; self.Mins[chan]:&amp;#10;            target = self.Mins[chan]&amp;#10;        # if Max is defined and Target is above, force to Max&amp;#10;        if self.Maxs[chan] &gt; 0 and target &gt; self.Maxs[chan]:&amp;#10;            target = self.Maxs[chan]&amp;#10;        #    &amp;#10;        lsb = target &amp; 0x7f #7 bits for least significant byte&amp;#10;        msb = (target &gt;&gt; 7) &amp; 0x7f #shift 7 and take next 7 bits for msb&amp;#10;        cmd = chr(0x04) + chr(chan) + chr(lsb) + chr(msb)&amp;#10;        self.sendCmd(cmd)&amp;#10;        # Record Target value&amp;#10;        self.Targets[chan] = target&amp;#10;        &amp;#10;    # Set speed of channel&amp;#10;    # Speed is measured as 0.25microseconds/10milliseconds&amp;#10;    # For the standard 1ms pulse width change to move a servo between extremes, a speed&amp;#10;    # of 1 will take 1 minute, and a speed of 60 would take 1 second.&amp;#10;    # Speed of 0 is unrestricted.&amp;#10;    def setSpeed(self, chan, speed):&amp;#10;        lsb = speed &amp; 0x7f #7 bits for least significant byte&amp;#10;        msb = (speed &gt;&gt; 7) &amp; 0x7f #shift 7 and take next 7 bits for msb&amp;#10;        cmd = chr(0x07) + chr(chan) + chr(lsb) + chr(msb)&amp;#10;        self.sendCmd(cmd)&amp;#10;&amp;#10;    # Set acceleration of channel&amp;#10;    # This provide soft starts and finishes when servo moves to target position.&amp;#10;    # Valid values are from 0 to 255. 0=unrestricted, 1 is slowest start.&amp;#10;    # A value of 1 will take the servo about 3s to move between 1ms to 2ms range.&amp;#10;    def setAccel(self, chan, accel):&amp;#10;        lsb = accel &amp; 0x7f #7 bits for least significant byte&amp;#10;        msb = (accel &gt;&gt; 7) &amp; 0x7f #shift 7 and take next 7 bits for msb&amp;#10;        cmd = chr(0x09) + chr(chan) + chr(lsb) + chr(msb)&amp;#10;        self.sendCmd(cmd)&amp;#10;    &amp;#10;    # Get the current position of the device on the specified channel&amp;#10;    # The result is returned in a measure of quarter-microseconds, which mirrors&amp;#10;    # the Target parameter of setTarget.&amp;#10;    # This is not reading the true servo position, but the last target position sent&amp;#10;    # to the servo. If the Speed is set to below the top speed of the servo, then&amp;#10;    # the position result will align well with the acutal servo position, assuming&amp;#10;    # it is not stalled or slowed.&amp;#10;    def getPosition(self, chan):&amp;#10;        cmd = chr(0x10) + chr(chan)&amp;#10;        self.sendCmd(cmd)&amp;#10;        lsb = ord(self.usb.read())&amp;#10;        msb = ord(self.usb.read())&amp;#10;        return (msb &lt;&lt; 8) + lsb&amp;#10;&amp;#10;    # Test to see if a servo has reached the set target position.  This only provides&amp;#10;    # useful results if the Speed parameter is set slower than the maximum speed of&amp;#10;    # the servo.  Servo range must be defined first using setRange. See setRange comment.&amp;#10;    #&amp;#10;    # ***Note if target position goes outside of Maestro's allowable range for the&amp;#10;    # channel, then the target can never be reached, so it will appear to always be&amp;#10;    # moving to the target.  &amp;#10;    def isMoving(self, chan):&amp;#10;        if self.Targets[chan] &gt; 0:&amp;#10;            if self.getPosition(chan) != self.Targets[chan]:&amp;#10;                return True&amp;#10;        return False&amp;#10;    &amp;#10;    # Have all servo outputs reached their targets? This is useful only if Speed and/or&amp;#10;    # Acceleration have been set on one or more of the channels. Returns True or False.&amp;#10;    # Not available with Micro Maestro.&amp;#10;    def getMovingState(self):&amp;#10;        cmd = chr(0x13)&amp;#10;        self.sendCmd(cmd)&amp;#10;        if self.usb.read() == chr(0):&amp;#10;            return False&amp;#10;        else:&amp;#10;            return True&amp;#10;&amp;#10;    # Run a Maestro Script subroutine in the currently active script. Scripts can&amp;#10;    # have multiple subroutines, which get numbered sequentially from 0 on up. Code your&amp;#10;    # Maestro subroutine to either infinitely loop, or just end (return is not valid).&amp;#10;    def runScriptSub(self, subNumber):&amp;#10;        cmd = chr(0x27) + chr(subNumber)&amp;#10;        # can pass a param with command 0x28&amp;#10;        # cmd = chr(0x28) + chr(subNumber) + chr(lsb) + chr(msb)&amp;#10;        self.sendCmd(cmd)&amp;#10;&amp;#10;    # Stop the current Maestro Script&amp;#10;    def stopScript(self):&amp;#10;        cmd = chr(0x24)&amp;#10;        self.sendCmd(cmd)&amp;#10;&amp;#10; " valType="extendedCode"/>
        <Param name="name" updates="None" val="code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
      <TextComponent name="text_2">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="text" updates="constant" val="______" valType="str"/>
        <Param name="stopVal" updates="constant" val="2" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Code_For_Servo"/>
    <Routine name="Beginning_Screen"/>
    <LoopInitiator loopType="TrialHandler" name="trials_2">
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="name" updates="None" val="trials_2" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="2000" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="blankscreen_space_goes_2_food"/>
    <Routine name="FoodReward"/>
    <LoopTerminator name="trials_2"/>
    <Routine name="experiment_over"/>
  </Flow>
</PsychoPy2experiment>
